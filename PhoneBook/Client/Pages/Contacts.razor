@page "/contacts"
@page "/"
@inject IPrivateContactService ContactService
@inject NavigationManager NavigationManager
@inject PublicContactService PublicContactService
@inject IToastService toastService

<PageTitle>Contacts</PageTitle>

<div class="d-flex justify-content-end">
    <AuthorizeView>
        <Authorized>
            <button class="btn btn-dark" @onclick="CreateNewContact">Create New Contact</button>
        </Authorized>
    </AuthorizeView>
</div>

<h3 class="text-dark pb-2 fw-bold">Contacts</h3>

@if (data != null && data.Any())
{
    <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
        @foreach (var contact in data)
        {
            <div class="col mb-4">
                <div class="card contact-card" style="height: 100%; border-radius: 10px;">
                    <div class="card-body" style="background-color: #ffffff; box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19); border-radius: 15px;">
                        <h5 class="card-title fw-bold" style="font-size: 1.5rem;">@($"{contact.FirstName} {contact.LastName}")</h5>
                        <p class="card-text"><strong>Phone Number:</strong> @contact.PhoneNumber</p>
                        <AuthorizeView>
                            <Authorized>
                                <p class="card-text"><strong>Email:</strong> @contact.Email</p>
                                <p class="card-text"><strong>Birth Date:</strong> @contact.BirthDate.ToString("dd-MM-yyyy")</p>
                            </Authorized>
                        </AuthorizeView>
                        <p class="card-text"><strong>Category:</strong> @contact.Category.Name</p>
                        @if (contact.Subcategory != null)
                        {
                            <p class="card-text"><strong>Subcategory:</strong> @contact.Subcategory.Name</p>
                        }
                        @if (contact.UserCategory != null)
                        {
                            <p class="card-text"><strong>Custom Category:</strong> @contact.UserCategory.Name</p>
                        }
                        <AuthorizeView>
                            <Authorized>
                                <button class="btn btn-dark" @onclick="(() => ShowContact(contact.Id))">
                                    <i class="oi oi-pencil"></i> Edit
                                </button>
                            </Authorized>
                        </AuthorizeView>
                    </div>
                </div>
            </div>
        }
    </div>
}
else
{
    <p>No contacts available</p>
}

<style>
    .contact-card:hover {
        border: 3px solid #27272f;
    }
</style>

@code {
    private List<Contact> data;

    protected override async Task OnInitializedAsync()
    {
        await PublicContactService.GetContacts();
        data = PublicContactService.Contacts.ToList();
    }

    void ShowContact(int id)
    {
        NavigationManager.NavigateTo($"contact/{id}");
    }

    void CreateNewContact()
    {
        NavigationManager.NavigateTo("/Contact");
    }
}
